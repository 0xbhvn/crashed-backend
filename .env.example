# BC Game Crash Monitor Configuration

# IMPORTANT: For Docker Compose usage:
# 1. Copy this file to .env
# 2. Update BC_GAME_SALT with your actual value
# 3. The database and Redis URLs are pre-configured for Docker Compose
#    If running locally without Docker, update them accordingly

# Application Environment
# Set to 'development' to use development settings (e.g., API port 8000)
# Set to 'production' for production settings (e.g., API port 3000)
ENVIRONMENT=development

# API Settings
API_BASE_URL=https://bc.fun
API_HISTORY_ENDPOINT=/api/game/bet/multi/history
GAME_URL=crash
PAGE_SIZE=10
API_PORT=8000

# Calculation Settings
BC_GAME_SALT=0000000000000000000301e2801a9a9598bfb114e574a91a887f2132f33047e6

# Monitoring Settings
POLL_INTERVAL=5
RETRY_INTERVAL=10
MAX_HISTORY_SIZE=10

# Logging Settings
LOG_LEVEL=INFO

# Database Configuration
DATABASE_ENABLED=true
# For Docker Compose: Use 'postgres' as host (service name)
# For local development: Use 'localhost' as host
DATABASE_URL=postgresql://postgres:postgres@postgres:5432/bc_crash_db

# Redis Settings
REDIS_ENABLED=true
# For Docker Compose: Use 'redis' as host (service name)
# For local development: Use 'localhost' as host
REDIS_URL=redis://redis:6379
REDIS_MAX_CONNECTIONS=10
REDIS_SOCKET_TIMEOUT=5
REDIS_CACHE_TTL_SHORT=30
REDIS_CACHE_TTL_LONG=120

# Catchup Settings
CATCHUP_ENABLED=true
CATCHUP_PAGES=20
CATCHUP_BATCH_SIZE=10

# Timezone Settings
TIMEZONE=Asia/Kolkata

# Application Settings
APP_NAME=Crash Monitor
APP_VERSION=0.2.0

# Logbook Settings
ANALYSIS_LOG_PATH=analysis_log.csv
GOOGLE_SHEETS_CREDENTIALS=
GOOGLE_SHEETS_ID=
